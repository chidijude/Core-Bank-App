@model Express.Core.Models.AccountConfiguration

@{
    ViewBag.Title = "EditCurrent";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Edit Current Account Configuration</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)
        @Html.HiddenFor(model => model.IsBusinessOpen)
        @Html.HiddenFor(model => model.FinancialDate)

        @Html.HiddenFor(model => model.SavingsCreditInterestRate)
        @Html.HiddenFor(model => model.SavingsMinimumBalance)
        @Html.HiddenFor(model => model.SavingsInterestExpenseGlID)
        @Html.HiddenFor(model => model.SavingsInterestPayableGlID)

        @Html.HiddenFor(model => model.LoanDebitInterestRate)
        @Html.HiddenFor(model => model.LoanInterestExpenseGLID)
        @Html.HiddenFor(model => model.LoanInterestIncomeGlID)
        @Html.HiddenFor(model => model.LoanInterestReceivableGlID)



        <div class="form-group">
            @Html.LabelFor(model => model.CurrentCreditInterestRate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CurrentCreditInterestRate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CurrentCreditInterestRate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CurrentMinimumBalance, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CurrentMinimumBalance, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CurrentMinimumBalance, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CurrentCot, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CurrentCot, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CurrentCot, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CurrentInterestExpenseGlID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CurrentInterestExpenseGlID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CurrentInterestExpenseGlID, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.CurrentInterestPayableGlID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CurrentInterestPayableGlID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CurrentInterestPayableGlID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CurrentCotIncomeGlID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CurrentCotIncomeGlID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CurrentCotIncomeGlID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default btn-primary" />
            </div>
        </div>
    </div>
}

<div class="col-md-offset-2 col-md-10">
    @Html.ActionLink("Back", "Details", new{}, new {@class="btn btn-primary"})
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}