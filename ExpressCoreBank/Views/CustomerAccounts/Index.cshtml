@model IEnumerable<ExpressCoreBank.Models.CustomerAccount>
<head>
    <script type="text/javascript">
        function goToNewPage(count) {
            var id = $("#customerId" + count).val();
            var url = document.getElementById('list' + count).value;
            if (url != 'none') {
                window.location = url + id;
            }
        }
    </script>
</head>
@{
    ViewBag.Title = "Index";
    var count = 0;
}

<h2>All Customer Accounts</h2>

<p>
    @Html.ActionLink("Open New Account", "SelectCustomerAccount", new {}, new { @class = "btn btn-success" })
</p>
<table class="table table-bordered table-striped" id="dataTable">
    <thead>
        <tr>
            <th>
                @*@Html.DisplayNameFor(model => model.Branch.Name)*@
                @Html.DisplayName("Branch")
            </th>
            @*<th>
                    @Html.DisplayNameFor(model => model.Customer.CustId)
                </th>
                <th>
                    @Html.DisplayName("Servicing Account Name")
                </th>*@
            <th>
                @Html.DisplayNameFor(model => model.AccountNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AccountName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AccountBalance)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateCreated)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AccountType)
            </th>
            @*<th>
                @Html.DisplayNameFor(model => model.AccountStatus)
            </th>*@
            <th></th>
        </tr>
    </thead>

    <tbody>
        @foreach (var item in Model)
    {
        count++;
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Branch.Name)
            </td>
            @*<td>
                    @Html.DisplayFor(modelItem => item.Customer.CustId)
                </td>
                <td>
                    @if (item.ServicingAccount == null)
                    {
                        @Html.DisplayName("NIL")
                    }
                    else
                    {
                        @Html.DisplayFor(modelItem => item.ServicingAccount.AccountName)
                    }

                </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.AccountNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AccountName)
            </td>
            <td>
                N @item.AccountBalance.ToString("N2", System.Globalization.CultureInfo.InvariantCulture)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateCreated)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AccountType)
            </td>
            @*<td>
                @Html.DisplayFor(modelItem => item.AccountStatus)
            </td*@>
            @*<td>
                @if (item.AccountStatus == ExpressCoreBank.Models.AccountStatus.Closed)
                {
                   @Html.ActionLink("  Activate", "ChangeAccountStatus", new { id = item.Id }, new {@class="btn btn-success"})
                }
                else
                {
                    @Html.ActionLink("  Deactivate", "ChangeAccountStatus", new { id = item.Id }, new {@class="btn btn-success"}) 
                } 
            <td/>*@
            <td>  <form>
                    <input id="customerId@(count)" type="hidden" value="@item.Id" />
                    <select name="list" id="list@(count)" accesskey="target" onclick="goToNewPage(@count)">
                        <option value='none' selected>Select</option>
                        <option value="customeraccounts/Edit/">Edit</option>
                        <option value="customeraccounts/Details/">Details</option>
                        <option value="customeraccounts/Delete/">Close</option>
                    </select>
                    @*<input type=button value="Go" onclick="goToNewPage(@item.Id)" />*@
                    @*<input type=button value="Go" onclick="goToNewPage(@count)" />*@

                </form>
                @*@Html.ActionLink(" Edit", "Edit", new { id = item.ID }, new {@class="btn btn-success "})  
           @Html.ActionLink("Details", "Details", new { id = item.ID }, new {@class="btn btn-success"})
            @Html.ActionLink("Delete", "Delete", new { id = item.ID }, new {@class="btn btn-success"})*@ 
            
        </tr>
    }
</tbody>

</table>
